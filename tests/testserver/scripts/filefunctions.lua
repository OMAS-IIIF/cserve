---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by rosenth.
--- DateTime: 10.07.21 22:53
---

function send_error(msg)
    server.print(msg)
    server.log(msg, server.loglevel.LOG_ERR)
    server.sendStatus(500)
    return false
end

local success, cwd = server.fs.getcwd()
if not success then
    return send_error(cwd)
end

local success, exists1 = server.fs.exists('./test_00.cpp')
if not success then
    return send_error(exists1)
end

local success, exists2 = server.fs.exists('./gaga')
if not success then
    return send_error(exists2)
end

local success, ftype1 = server.fs.ftype('/dev/null')
if not success then
    return send_error(ftype1)
end

local success, ftype2 = server.fs.ftype('./testserver')
if not success then
    return send_error(ftype2)
end

local success, modtime = server.fs.modtime('./test_00.cpp')
if not success then
    return send_error(modtime)
end

local success, dirlist = server.fs.readdir('./testserver')
if not success then
    return send_error(dirlist)
end

local success, readable1 = server.fs.is_readable('./testserver/docroot/test.html')
if not success then
    return send_error(readable1)
end

local success, readable2 = server.fs.is_readable('./testserver/docroot/gaga.gaga')
if not success then
    return send_error(readable2)
end

local success, writeable1 = server.fs.is_writeable('./testserver/docroot/test.csv')
if not success then
    return send_error(writeable1)
end

local success, writeable2 = server.fs.is_writeable('/bin/bash')
if not success then
    return send_error(writeable2)
end

local success, executable1 = server.fs.is_executable('/bin/bash')
if not success then
    return send_error(executable1)
end

local success, executable2 = server.fs.is_executable('./testserver/docroot/test.csv')
if not success then
    return send_error(executable2)
end

local success, errmsg = server.fs.mkdir('./testserver/tmp/testdir', tonumber('0755', 8))
if not success then
    return send_error(errmsg)
end
local success, mkdir_success = server.fs.ftype('./testserver/tmp/testdir')
if not success then
    return send_error(mkdir_success)
end

local success, errmsg = server.fs.rmdir('./testserver/tmp/testdir')
if not success then
    return send_error(errmsg)
end
local success, dir_exists = server.fs.exists('./testserver/tmp/testdir')
if not success then
    return send_error(dir_exists)
end

local success, errmsg = server.fs.copyFile('./testserver/docroot/range.dat', './testserver/tmp/range.dat')
if not success then
    return send_error(errmsg)
end
local success, copyfile_exists = server.fs.exists('./testserver/tmp/range.dat')
if not success then
    return send_error(copyfile_exists)
end

local success, errmsg = server.fs.unlink('./testserver/tmp/range.dat')
if not success then
    return send_error(errmsg)
end
local success, unlink_exists = server.fs.exists('./testserver/tmp/range.dat')
if not success then
    return send_error(unlink_exists)
end

file = io.open("./testserver/tmp/testit.txt", "w")
file:write("Hello World")
file:close()
local success, errmsg = server.fs.moveFile('./testserver/tmp/testit.txt', './testserver/tmp/gaga.txt')
if not success then
    return send_error(errmsg)
end
local success, movefile_exists = server.fs.exists('./testserver/tmp/gaga.txt')
if not success then
    return send_error(movefile_exists)
end

local success, oldir = server.fs.chdir('./testserver/tmp')
if not success then
    return send_error(oldir)
end
local success, after_chdir = server.fs.getcwd()
if not success then
    return send_error(after_chdir)
end
local success, oldoldir = server.fs.chdir(oldir)
if not success then
    return send_error(oldoldir)
end



result = {
    status = 'OK',
    fs = {
        cwd = cwd,
        exists1 = exists1,
        exists2 = exists2,
        ftype1 = ftype1,
        ftype2 = ftype2,
        modtime = modtime,
        dirlist = dirlist,
        readable1 = readable1,
        readable2 = readable2,
        writeable1 = writeable1,
        writeable2 = writeable2,
        executable1 = executable1,
        executable2 = executable2,
        mkdir_success = mkdir_success,
        dir_exists = dir_exists,
        copyfile_exists = copyfile_exists,
        unlink_exists = unlink_exists,
        movefile_exists = movefile_exists,
        after_chdir = after_chdir,
    }
}

local success, jsonresult = server.table_to_json(result)
if not success then
    return send_error(jsonresult)
end

server.sendHeader('Content-type', 'application/json')
server.sendStatus(200)
server.print(jsonresult)
return true
